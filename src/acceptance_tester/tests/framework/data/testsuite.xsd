<?xml version="1.0" encoding="UTF-8"?>
<!--
  This file is part of opensearch.
  Copyright Â© 2009, Dansk Bibliotekscenter a/s,
  Tempovej 7-11, DK-2750 Ballerup, Denmark. CVR: 15149043

  opensearch is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  opensearch is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with opensearch.  If not, see <http://www.gnu.org/licenses/>.
-->

<!-- xsd documenting how test-scenarios for a testsuite should be -->
<!-- build. -->
<!-- Used to validate test-scenarios. -->
<xsd:schema targetNamespace="info:testsuite#"
            xmlns="info:testsuite#"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="qualified">

  <!-- The root element -->
  <!-- test occurence is unbounded, i.e. you can have as many tests as -->
  <!-- you want in the root element. -->
  <xsd:element name="testsuite">
    <xsd:complexType>
      <xsd:sequence maxOccurs="unbounded">
        <xsd:element name="test" type="testType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- The test type -->
  <!-- test elements contains unbound number of ingest, -->
  <!-- dataimport, search elements in no particular order.  -->
  <xsd:complexType name="testType">
    <xsd:sequence maxOccurs="unbounded">
    <xsd:choice>
      <xsd:element name="ingest" type="ingestType"/>
      <xsd:element name="authorized" type="authorizedType"/>
      <xsd:element name="purge" type="xsd:string"/>
      <xsd:element name="sleep" type="xsd:integer"/>
      <xsd:element name="dataimport" type="dataimportType"/>
      <xsd:element name="search" type="searchType"/>
    </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="name" use="required" type="xsd:string"/>
  </xsd:complexType>

  <!-- The search type -->
  <!-- The search type has a expected attribute. The text content is a -->
  <!-- string -->
  <xsd:complexType name="searchType">
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:choice>
        <xsd:element name="id" type="xsd:string"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="search-string" type="xsd:string" use="required" />
    <xsd:attribute name="expected" type="xsd:integer" />
      </xsd:complexType> 

  <!-- The ingest type -->
  <!-- The ingest element has a type attribute that must conform to -->
  <!-- ingestTypeType, and an optional expected attribute -->  
  <xsd:complexType name="ingestType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="type" use="required" type="ingestTypeType"/>
        <xsd:attribute name="expected" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>    
  </xsd:complexType>

  <!-- The "authorized type -->
  <xsd:complexType name="authorizedType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="object" use="required" type="xsd:string"/>
        <xsd:attribute name="path" use="required" type="xsd:string"/>
        <xsd:attribute name="expected" type="authorizedExpectedType"/>
      </xsd:extension>
    </xsd:simpleContent>    
  </xsd:complexType>

  <!-- ingestTypeType can either be the string 'file' or 'folder'. -->
  <xsd:simpleType name="ingestTypeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="file"/>
      <xsd:enumeration value="folder"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- The dataimport type -->
  <!-- The dataimport element has a command attribute that must conform to -->
  <!-- dataimportCommandType. Contains expectedType elements-->
  <xsd:complexType name="dataimportType">
    <xsd:sequence minOccurs="0">
      <xsd:element name="total-rows-fetches" type="expectedType" />
      <xsd:element name="total-documents-skipped" type="expectedType" />
      <xsd:element name="total-documents-processed" type="expectedType" />    
    </xsd:sequence>
    <xsd:attribute name="command" use="required" type="dataimportCommandType"/>
    <xsd:attribute name="clean" type="cleanType" default="true" />
  </xsd:complexType>

  <!-- dataimportCommandType can only be the string 'full-import'. -->
  <xsd:simpleType name="dataimportCommandType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="full-import"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- authorizedExpectedType can either be permit or deny -->
  <xsd:simpleType name="authorizedExpectedType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="permit"/>
      <xsd:enumeration value="deny"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- cleanType. Can be either true or false. Default is true -->
  <xsd:simpleType name="cleanType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="true"/>
      <xsd:enumeration value="false"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Expected element is a attribute named expected of integer type  -->
  <xsd:complexType name="expectedType">
    <xsd:attribute name="expected" use="required" type="xsd:integer"/>
  </xsd:complexType>

</xsd:schema>



